{"ast":null,"code":"var _jsxFileName = \"/home/kishan/camp/react-timer-app/src/App.js\",\n    _s = $RefreshSig$();\n\n// import FullTimer from \"./components/FullTimer\";\n// import NavBar from \"./components/NavBar\";\nimport FullTimer from \"./components/SingleTimer/FullTimer\";\nimport Searchbar from \"./components/SearchBar/SearchBar\";\nimport React, { useEffect, useState } from \"react\";\nimport Swal from \"sweetalert2\";\nimport \"./index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  // ************************************************************************ //\n  // ********************* //\n  // *** STATES *** //\n  // ********************* //\n  // ************************************************************************ //\n  const [timerList, setTimerList] = useState(getStorage());\n  const [InputFilter, setInputFilter] = useState(\"\"); // ************************************************************************ //\n  // *********************   //\n  // *** STATES MODIFIER *** //\n  // *********************   //\n  // ************************************************************************ //\n\n  function getStorage() {\n    let timerStorage = localStorage.getItem(\"timerList\");\n    if (!timerStorage || timerStorage === []) return [];\n    return JSON.parse(timerStorage.toString());\n  }\n\n  async function createTimer() {\n    await Swal.fire({\n      title: \"Enter child's name\",\n      input: \"text\",\n      inputValidator: value => {\n        if (!value) return \"You need to write something!\";\n      }\n    }).then(result => {\n      if (!result.value) return;\n      setTimerList(timerList => [...timerList, {\n        timeoutSeconds: 0,\n        id: `${result.value} ${timerList.length}`,\n        expiryTimestamp: 0\n      }]);\n      resume();\n    });\n  }\n\n  function timeChange(timer, seconds) {\n    let newList = [...timerList];\n    const timerIndex = newList.findIndex(obj => {\n      return obj.id === timer.id;\n    });\n    newList[timerIndex].timeoutSeconds = seconds;\n    setTimerList(newList);\n  }\n\n  function sortTimerList(sortMethod) {\n    let sorted = \"\";\n\n    switch (sortMethod) {\n      case \"A-Z\":\n        sorted = [...timerList].sort((a, b) => a.id.localeCompare(b.id));\n        break;\n\n      case \"Z-A\":\n        sorted = [...timerList].sort((a, b) => b.id.localeCompare(a.id));\n        break;\n\n      case \"time-up\":\n        sorted = [...timerList].sort((a, b) => a.timeoutSeconds - b.timeoutSeconds);\n        break;\n\n      case \"time-down\":\n        sorted = [...timerList].sort((a, b) => b.timeoutSeconds - a.timeoutSeconds);\n        break;\n\n      default:\n        return null;\n    }\n\n    setTimerList(sorted);\n  }\n\n  function removeTimer(timer) {\n    setTimerList(timerList => timerList.filter(t => t.id !== timer.id));\n  }\n\n  useEffect(() => {\n    localStorage.setItem(\"timerList\", JSON.stringify(timerList));\n  }, [timerList]); // ************************************************************************ //\n  // ********************* //\n  // *** HTML STRUCTURE *** //\n  // ********************* //\n  // ************************************************************************ //\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"main\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"StarCamp Time Tracker\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Searchbar, {\n      createTimer: () => createTimer(),\n      changeInputFilter: event => setInputFilter(event),\n      sortList: sortMethod => sortTimerList(sortMethod)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), timerList.map(timer => /*#__PURE__*/_jsxDEV(FullTimer, {\n      id: timer.id,\n      isHidden: !timer.id.substring(0, timer.id.lastIndexOf(\" \")).toLocaleLowerCase() // id without index\n      .includes(InputFilter.toLocaleLowerCase()),\n      expiryTimestamp: timer.expiryTimestamp,\n      removeTimer: () => removeTimer(timer),\n      updateTimeoutSeconds: seconds => timeChange(timer, seconds)\n    }, timer.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"/sj6JR50X7G84RCTdHbSbnxBb5c=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/kishan/camp/react-timer-app/src/App.js"],"names":["FullTimer","Searchbar","React","useEffect","useState","Swal","App","timerList","setTimerList","getStorage","InputFilter","setInputFilter","timerStorage","localStorage","getItem","JSON","parse","toString","createTimer","fire","title","input","inputValidator","value","then","result","timeoutSeconds","id","length","expiryTimestamp","resume","timeChange","timer","seconds","newList","timerIndex","findIndex","obj","sortTimerList","sortMethod","sorted","sort","a","b","localeCompare","removeTimer","filter","t","setItem","stringify","event","map","substring","lastIndexOf","toLocaleLowerCase","includes"],"mappings":"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","sourcesContent":["// import FullTimer from \"./components/FullTimer\";\n// import NavBar from \"./components/NavBar\";\nimport FullTimer from \"./components/SingleTimer/FullTimer\";\nimport Searchbar from \"./components/SearchBar/SearchBar\";\nimport React, { useEffect, useState } from \"react\";\nimport Swal from \"sweetalert2\";\nimport \"./index.css\";\n\nexport default function App() {\n  // ************************************************************************ //\n\n  // ********************* //\n  // *** STATES *** //\n  // ********************* //\n\n  // ************************************************************************ //\n\n  const [timerList, setTimerList] = useState(getStorage());\n  const [InputFilter, setInputFilter] = useState(\"\");\n\n  // ************************************************************************ //\n\n  // *********************   //\n  // *** STATES MODIFIER *** //\n  // *********************   //\n\n  // ************************************************************************ //\n\n  function getStorage() {\n    let timerStorage = localStorage.getItem(\"timerList\");\n    if (!timerStorage || timerStorage === []) return [];\n    return JSON.parse(timerStorage.toString());\n  }\n\n  async function createTimer() {\n    await Swal.fire({\n      title: \"Enter child's name\",\n      input: \"text\",\n      inputValidator: (value) => {\n        if (!value) return \"You need to write something!\";\n      },\n    }).then((result) => {\n      if (!result.value) return;\n      setTimerList((timerList) => [\n        ...timerList,\n        {\n          timeoutSeconds: 0,\n          id: `${result.value} ${timerList.length}`,\n          expiryTimestamp: 0,\n        },\n      ]);\n      resume();\n    });\n  }\n\n  function timeChange(timer, seconds) {\n    let newList = [...timerList];\n    const timerIndex = newList.findIndex((obj) => {\n      return obj.id === timer.id;\n    });\n    newList[timerIndex].timeoutSeconds = seconds;\n    setTimerList(newList);\n  }\n\n  function sortTimerList(sortMethod) {\n    let sorted = \"\";\n    switch (sortMethod) {\n      case \"A-Z\":\n        sorted = [...timerList].sort((a, b) => a.id.localeCompare(b.id));\n        break;\n      case \"Z-A\":\n        sorted = [...timerList].sort((a, b) => b.id.localeCompare(a.id));\n        break;\n      case \"time-up\":\n        sorted = [...timerList].sort(\n          (a, b) => a.timeoutSeconds - b.timeoutSeconds\n        );\n        break;\n      case \"time-down\":\n        sorted = [...timerList].sort(\n          (a, b) => b.timeoutSeconds - a.timeoutSeconds\n        );\n        break;\n      default:\n        return null;\n    }\n    setTimerList(sorted);\n  }\n\n  function removeTimer(timer) {\n    setTimerList((timerList) => timerList.filter((t) => t.id !== timer.id));\n  }\n\n  useEffect(() => {\n    localStorage.setItem(\"timerList\", JSON.stringify(timerList));\n  }, [timerList]);\n\n  // ************************************************************************ //\n\n  // ********************* //\n  // *** HTML STRUCTURE *** //\n  // ********************* //\n\n  // ************************************************************************ //\n\n  return (\n    <div id=\"main\">\n        <div>\n              <h1>StarCamp Time Tracker</h1>\n        </div>\n      <Searchbar\n        createTimer={() => createTimer()}\n        changeInputFilter={(event) => setInputFilter(event)}\n        sortList={(sortMethod) => sortTimerList(sortMethod)}\n      />\n      {timerList.map((timer) => (\n        <FullTimer\n          key={timer.id}\n          id={timer.id}\n          isHidden={\n            !timer.id\n              .substring(0, timer.id.lastIndexOf(\" \"))\n              .toLocaleLowerCase() // id without index\n              .includes(InputFilter.toLocaleLowerCase())\n          }\n          expiryTimestamp={timer.expiryTimestamp}\n          removeTimer={() => removeTimer(timer)}\n          updateTimeoutSeconds={(seconds) => timeChange(timer, seconds)}\n        />\n      ))}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}